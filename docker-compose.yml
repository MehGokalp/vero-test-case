version: '3.8'

services:
  app_php:
    build:
      context: docker/dev/php
    restart: on-failure
    volumes:
      - ".:/var/www/html"
      - "./docker/dev/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

  app_nginx:
    image: nginx:alpine
    restart: on-failure
    depends_on:
      - app_php
    volumes:
      - ".:/var/www/html"
      - "./docker/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "8081:80"

  app_ui_redis:
    image: redis:5.0-alpine
    restart: on-failure
    depends_on:
      - app_php
    ports:
      - "63790:6379"

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
